{"version":3,"sources":["App.module.css","App.js","reportWebVitals.js","index.js"],"names":["module","exports","App","useState","state","setState","count","setCount","winLine","ClickHendler","event","id","target","getAttribute","curSQ","alert","setTimeout","s","i","line","CheckWiner","className","style","canvas","areas","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,OAAS,oBAAoB,MAAQ,qB,sICoGxCC,EAlGH,WAAO,IAAD,EACQC,mBAAS,CAC/B,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAVc,mBACXC,EADW,KACJC,EADI,OAYQF,mBAAS,GAZjB,mBAYXG,EAZW,KAYJC,EAZI,KAaZC,EAAU,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAoBHC,EAAe,SAACC,GACpB,IAAIC,EAAKD,EAAME,OAAOC,aAAa,MAC/BC,EAAQV,EACM,OAAdU,EAAMH,IACRG,EAAMH,GAAML,EAAQ,IAAM,EAAI,IAAM,IACpCC,EAASD,EAAQ,GACjBD,EAASS,IAETC,MAAM,+DAERC,YAAW,YA5BM,WAEjB,IADA,IAAIC,EAAIX,EAAQ,IAAM,EAAI,IAAM,IACvBY,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIC,EAAOX,EAAQU,GAEjBd,EAAMe,EAAK,MAAQF,GACnBb,EAAMe,EAAK,MAAQF,GACnBb,EAAMe,EAAK,MAAQF,IAEnBF,MAAME,EAAI,QACVD,YAAW,WACTT,EAAS,GACTF,EAAS,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,SACzD,OAgBLe,KACC,MAGL,OACE,sBAAKC,UAAWC,IAAMC,OAAtB,UACE,qBAAKF,UAAWC,IAAME,MAAOC,QAAShB,EAAcE,GAAI,EAAxD,SAEGP,EAAM,KAET,qBAAKiB,UAAWC,IAAME,MAAOC,QAAShB,EAAcE,GAAI,EAAxD,SAEGP,EAAM,KAET,qBAAKiB,UAAWC,IAAME,MAAOC,QAAShB,EAAcE,GAAI,EAAxD,SAEGP,EAAM,KAET,qBAAKiB,UAAWC,IAAME,MAAOC,QAAShB,EAAcE,GAAI,EAAxD,SAEGP,EAAM,KAET,qBAAKiB,UAAWC,IAAME,MAAOC,QAAShB,EAAcE,GAAI,EAAxD,SAEGP,EAAM,KAET,qBAAKiB,UAAWC,IAAME,MAAOC,QAAShB,EAAcE,GAAI,EAAxD,SAEGP,EAAM,KAET,qBAAKiB,UAAWC,IAAME,MAAOC,QAAShB,EAAcE,GAAI,EAAxD,SAEGP,EAAM,KAET,qBAAKiB,UAAWC,IAAME,MAAOC,QAAShB,EAAcE,GAAI,EAAxD,SAEGP,EAAM,KAET,qBAAKiB,UAAWC,IAAME,MAAOC,QAAShB,EAAcE,GAAI,EAAxD,SAEGP,EAAM,SCnFAsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9c85bdb9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"App_canvas__2_JCb\",\"areas\":\"App_areas__JcWbm\"};","import React, { useState } from \"react\";\nimport style from \"./App.module.css\";\n\nconst App = () => {\n  let [state, setState] = useState([\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n  ]);\n  let [count, setCount] = useState(0);\n  let winLine = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  const CheckWiner = () => {\n    let s = count % 2 === 0 ? \"X\" : \"O\";\n    for (let i = 0; i < 8; i++) {\n      let line = winLine[i];\n      if (\n        state[line[0]] === s &&\n        state[line[1]] === s &&\n        state[line[2]] === s\n      ) {\n        alert(s + \" win\");\n        setTimeout(() => {\n          setCount(0);\n          setState([null, null, null, null, null, null, null, null, null]);\n        }, 700);\n      }\n    }\n  };\n\n  const ClickHendler = (event) => {\n    let id = event.target.getAttribute(\"id\");\n    let curSQ = state;\n    if (curSQ[id] === null) {\n      curSQ[id] = count % 2 === 0 ? \"X\" : \"O\";\n      setCount(count + 1);\n      setState(curSQ);\n    } else {\n      alert(\"Э ты че дядя!?\");\n    }\n    setTimeout(() => {\n      CheckWiner();\n    }, 100);\n  };\n\n  return (\n    <div className={style.canvas}>\n      <div className={style.areas} onClick={ClickHendler} id={0}>\n\n        {state[0]}\n      </div>\n      <div className={style.areas} onClick={ClickHendler} id={1}>\n\n        {state[1]}\n      </div>\n      <div className={style.areas} onClick={ClickHendler} id={2}>\n\n        {state[2]}\n      </div>\n      <div className={style.areas} onClick={ClickHendler} id={3}>\n\n        {state[3]}\n      </div>\n      <div className={style.areas} onClick={ClickHendler} id={4}>\n\n        {state[4]}\n      </div>\n      <div className={style.areas} onClick={ClickHendler} id={5}>\n\n        {state[5]}\n      </div>\n      <div className={style.areas} onClick={ClickHendler} id={6}>\n\n        {state[6]}\n      </div>\n      <div className={style.areas} onClick={ClickHendler} id={7}>\n\n        {state[7]}\n      </div>\n      <div className={style.areas} onClick={ClickHendler} id={8}>\n\n        {state[8]}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}